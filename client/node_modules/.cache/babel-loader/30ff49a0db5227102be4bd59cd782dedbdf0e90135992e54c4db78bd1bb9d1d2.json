{"ast":null,"code":"var _jsxFileName = \"/home/phil/gamehenge/client/src/index.js\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport authReducer from \"./state\";\nimport { configureStore } from \"@reduxjs/toolkit\";\nimport { Provider } from \"react-redux\";\nimport { persistStore, persistReducer, FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER } from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\";\nimport { PersistGate } from \"redux-persist/integration/react\";\n// import { GetDefaultMiddleware } from \"@reduxjs/toolkit/dist/getDefaultMiddleware\";\n// import { getDefaultNormalizer } from \"@testing-library/react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst persistConfig = {\n  key: \"root\",\n  storage,\n  version: 1\n};\nconst persistedReducer = persistReducer(persistConfig, authReducer);\nconst store = configureStore({\n  reducer: persistReducer,\n  middleware: GetDefaultMiddleware => getDefaultMiddleware({\n    serializeableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER]\n    }\n  })\n});\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render( /*#__PURE__*/_jsxDEV(React.StrictMode, {\n  children: /*#__PURE__*/_jsxDEV(Provider, {\n    store: store,\n    children: /*#__PURE__*/_jsxDEV(PersistGate, {\n      loading: null,\n      persistor: persistStore(store),\n      children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 37,\n  columnNumber: 3\n}, this));","map":{"version":3,"names":["React","ReactDOM","App","authReducer","configureStore","Provider","persistStore","persistReducer","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","storage","PersistGate","jsxDEV","_jsxDEV","persistConfig","key","version","persistedReducer","store","reducer","middleware","GetDefaultMiddleware","getDefaultMiddleware","serializeableCheck","ignoredActions","root","createRoot","document","getElementById","render","StrictMode","children","loading","persistor","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["/home/phil/gamehenge/client/src/index.js"],"sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport authReducer from \"./state\";\nimport { configureStore } from \"@reduxjs/toolkit\";\nimport { Provider } from \"react-redux\";\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\";\nimport { PersistGate } from \"redux-persist/integration/react\";\n// import { GetDefaultMiddleware } from \"@reduxjs/toolkit/dist/getDefaultMiddleware\";\n// import { getDefaultNormalizer } from \"@testing-library/react\";\n\nconst persistConfig = { key: \"root\", storage, version: 1 };\nconst persistedReducer = persistReducer(persistConfig, authReducer);\nconst store = configureStore ({\n  reducer: persistReducer,\n  middleware: (GetDefaultMiddleware) =>\n    getDefaultMiddleware({\n      serializeableCheck: {\n        ignoredActions: [ FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER ],\n      },\n    }),\n});\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    < Provider store={store}>\n      <PersistGate loading={null} persistor={persistStore(store)}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>\n);\n\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,kBAAkB;AACvC,OAAO,aAAa;AACpB,OAAOC,GAAG,MAAM,OAAO;AACvB,OAAOC,WAAW,MAAM,SAAS;AACjC,SAASC,cAAc,QAAQ,kBAAkB;AACjD,SAASC,QAAQ,QAAQ,aAAa;AACtC,SACEC,YAAY,EACZC,cAAc,EACdC,KAAK,EACLC,SAAS,EACTC,KAAK,EACLC,OAAO,EACPC,KAAK,EACLC,QAAQ,QACH,eAAe;AACtB,OAAOC,OAAO,MAAM,2BAA2B;AAC/C,SAASC,WAAW,QAAQ,iCAAiC;AAC7D;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,MAAMC,aAAa,GAAG;EAAEC,GAAG,EAAE,MAAM;EAAEL,OAAO;EAAEM,OAAO,EAAE;AAAE,CAAC;AAC1D,MAAMC,gBAAgB,GAAGd,cAAc,CAACW,aAAa,EAAEf,WAAW,CAAC;AACnE,MAAMmB,KAAK,GAAGlB,cAAc,CAAE;EAC5BmB,OAAO,EAAEhB,cAAc;EACvBiB,UAAU,EAAGC,oBAAoB,IAC/BC,oBAAoB,CAAC;IACnBC,kBAAkB,EAAE;MAClBC,cAAc,EAAE,CAAEpB,KAAK,EAAEC,SAAS,EAAEC,KAAK,EAAEC,OAAO,EAAEC,KAAK,EAAEC,QAAQ;IACrE;EACF,CAAC;AACL,CAAC,CAAC;AAEF,MAAMgB,IAAI,GAAG5B,QAAQ,CAAC6B,UAAU,CAACC,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAC,CAAC;AACjEH,IAAI,CAACI,MAAM,eACThB,OAAA,CAACjB,KAAK,CAACkC,UAAU;EAAAC,QAAA,eACflB,OAAA,CAAEZ,QAAQ;IAACiB,KAAK,EAAEA,KAAM;IAAAa,QAAA,eACtBlB,OAAA,CAACF,WAAW;MAACqB,OAAO,EAAE,IAAK;MAACC,SAAS,EAAE/B,YAAY,CAACgB,KAAK,CAAE;MAAAa,QAAA,eACzDlB,OAAA,CAACf,GAAG;QAAAoC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACI;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN;AAAC;EAAAH,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OACK,CACpB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}